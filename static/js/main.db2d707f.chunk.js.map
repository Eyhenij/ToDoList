{"version":3,"sources":["components/ListItem/ListItem.jsx","components/TaskList.jsx","redux/tasksReducer.js","App.js","redux/storeRedux.js","index.js","components/ListItem/ListItem.module.css"],"names":["ListItem","props","className","s","list__item","item__description","description","item__input","type","defaultChecked","completed","onChange","handleChange","TaskList","ToDoItem","listData","arrListData","map","i","id","ADD_TASK","UPDATE_NEW_TASK_TEXT","initialState","newTaskText","tasksReducer","state","action","newTask","push","updateTask","App","value","placeholder","event","taskText","target","dispatch","updateNewTaskActionCreator","onClick","reducers","combineReducers","store","createStore","reRenderEntireTree","ReactDOM","render","StrictMode","bind","document","getElementById","getState","subscribe","module","exports"],"mappings":"oQAoBeA,EAjBE,SAACC,GACd,OACI,sBAAKC,UAAWC,IAAEC,WAAlB,UACI,qBAAKF,UAAWC,IAAEE,kBAAlB,SACKJ,EAAMK,cAEX,qBAAKJ,UAAWC,IAAEI,YAAlB,SACI,uBACIC,KAAK,WACLC,eAAgBR,EAAMS,UACtBC,SAAUV,EAAMW,qBCUrBC,EAnBE,SAACZ,GACf,IAAIa,EAAWb,EAAMc,SAASC,YAAYC,KAAI,SAAAC,GAC3C,OACG,cAAC,EAAD,CAEGZ,YAAaY,EAAEZ,YACfI,UAAWQ,EAAER,WAFRQ,EAAEC,OAQhB,OACG,8BACIL,KClBJM,EAAW,WACXC,EAAuB,uBAEzBC,EAAe,CAChBN,YAAa,CACV,CAAEG,GAAI,EAAGb,YAAa,+FAAqBI,WAAW,GACtD,CAAES,GAAI,EAAGb,YAAa,gEAAeI,WAAW,GAChD,CAAES,GAAI,EAAGb,YAAa,qJAA8BI,WAAW,GAC/D,CAAES,GAAI,EAAGb,YAAa,wIAA2BI,WAAW,GAC5D,CAAES,GAAI,EAAGb,YAAa,2HAAkCI,WAAW,IAEtEa,YAAa,IAoCDC,EAjCM,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAEpD,OAAQA,EAAOlB,MACZ,KAAKY,EACF,IAAIO,EAAU,CACXR,GAAI,EACJb,YAAamB,EAAMF,YACnBb,WAAW,GAId,OAFAe,EAAMT,YAAYY,KAAKD,GACvBF,EAAMF,YAAc,GACbE,EACV,KAAKJ,EAEF,OADAI,EAAMF,YAAcG,EAAOG,WACpBJ,EACV,QACG,OAAOA,ICMDK,EA9BH,SAAC7B,GAWT,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CAAUa,SAAUd,EAAMwB,MAAMV,aAEpC,8BACI,0BACIgB,MAAO9B,EAAMwB,MAAMV,SAASQ,YAC5BS,YAAY,6BACZrB,SAdG,SAACsB,GAChB,IAAIC,EAAWD,EAAME,OAAOJ,MAC5B9B,EAAMmC,SD0B4B,SAACF,GACxC,MAAO,CACJ1B,KAAMa,EACNQ,WAAYK,GC7BKG,CAA2BH,SAetC,8BACI,wBAAQI,QAtBJ,WACZrC,EAAMmC,SD0BJ,CACJ5B,KAAMY,KCNI,4B,OC1BZmB,EAAWC,YAAgB,CAC5BzB,SAAUS,IAKEiB,EAFHC,YAAYH,GCApBI,EAAqB,SAAClB,GACvBmB,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,CACGrB,MAAOA,EACPW,SAAUK,EAAML,SAASW,KAAKN,OAGpCO,SAASC,eAAe,UAI9BN,EAAmBF,EAAMS,YACzBT,EAAMU,WAAU,WACb,IAAI1B,EAAQgB,EAAMS,WAClBP,EAAmBlB,O,kBCtBtB2B,EAAOC,QAAU,CAAC,WAAa,6BAA6B,kBAAoB,oCAAoC,YAAc,iC","file":"static/js/main.db2d707f.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './ListItem.module.css';\r\n\r\nconst ListItem = (props) => {\r\n    return (\r\n        <div className={s.list__item}>\r\n            <div className={s.item__description}>\r\n                {props.description}\r\n            </div>\r\n            <div className={s.item__input} >\r\n                <input\r\n                    type=\"checkbox\"\r\n                    defaultChecked={props.completed}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport s from './taskList.module.css';\r\nimport ListItem from './ListItem/ListItem.jsx'\r\n\r\nconst TaskList = (props) => {\r\n   let ToDoItem = props.listData.arrListData.map(i => {\r\n      return (\r\n         <ListItem\r\n            key={i.id}\r\n            description={i.description}\r\n            completed={i.completed}\r\n         />\r\n      )\r\n   }\r\n   );\r\n\r\n   return (\r\n      <div>\r\n         {ToDoItem}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TaskList;\r\n","const ADD_TASK = 'ADD-TASK';\r\nconst UPDATE_NEW_TASK_TEXT = 'UPDATE-NEW-TASK-TEXT';\r\n\r\nlet initialState = {\r\n   arrListData: [\r\n      { id: 0, description: 'Сходить в магазин', completed: false },\r\n      { id: 1, description: 'Помыть кота', completed: false },\r\n      { id: 2, description: 'закончить тестовое задание', completed: false },\r\n      { id: 3, description: 'Подготовить презентацию', completed: false },\r\n      { id: 4, description: 'Посмотреть 100 лекций по react', completed: false }\r\n   ],\r\n   newTaskText: ''\r\n};\r\n\r\nconst tasksReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case ADD_TASK:\r\n         let newTask = {\r\n            id: 5,\r\n            description: state.newTaskText,\r\n            completed: false\r\n         };\r\n         state.arrListData.push(newTask);\r\n         state.newTaskText = '';\r\n         return state;\r\n      case UPDATE_NEW_TASK_TEXT:\r\n         state.newTaskText = action.updateTask;\r\n         return state;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const addTaskActionCreator = () => {\r\n   return {\r\n      type: ADD_TASK\r\n   }\r\n}\r\n\r\nexport const updateNewTaskActionCreator = (taskText) => {\r\n   return {\r\n      type: UPDATE_NEW_TASK_TEXT,\r\n      updateTask: taskText\r\n   }\r\n}\r\n\r\nexport default tasksReducer;","import React from \"react\";\r\nimport './App.css';\r\nimport TaskList from './components/TaskList.jsx'\r\nimport { addTaskActionCreator, updateNewTaskActionCreator } from './redux/tasksReducer';\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    const addTask = () => {\r\n        props.dispatch(addTaskActionCreator());\r\n    }\r\n\r\n    let onTaskChange = (event) => {\r\n        let taskText = event.target.value;\r\n        props.dispatch(updateNewTaskActionCreator(taskText));\r\n    }\r\n\r\n    return (\r\n        <div className='list'>\r\n            <div className='list__item'>\r\n                <TaskList listData={props.state.listData} />\r\n            </div>\r\n            <div>\r\n                <textarea\r\n                    value={props.state.listData.newTaskText}\r\n                    placeholder='please, enter your message'\r\n                    onChange={onTaskChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={addTask}>Add task</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// const { createStore, combineReducers } = require(\"redux\");\r\nimport { createStore, combineReducers } from 'redux';\r\nimport tasksReducer from './tasksReducer'\r\n\r\nlet reducers = combineReducers({\r\n   listData: tasksReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport store from './redux/storeRedux';\r\n\r\n\r\nlet reRenderEntireTree = (state) => {\r\n   ReactDOM.render(\r\n      <React.StrictMode>\r\n         <App\r\n            state={state}\r\n            dispatch={store.dispatch.bind(store)}\r\n         />\r\n      </React.StrictMode>,\r\n      document.getElementById('root')\r\n   );\r\n}\r\n\r\nreRenderEntireTree(store.getState())\r\nstore.subscribe(() => {\r\n   let state = store.getState();\r\n   reRenderEntireTree(state);\r\n});\r\n\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"ListItem_list__item__3Pixh\",\"item__description\":\"ListItem_item__description__2KR50\",\"item__input\":\"ListItem_item__input__2oIGQ\"};"],"sourceRoot":""}